// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace FundaAssignment.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("QuickSearch on home page", Description="\tIn order to complete the assignment\r\n\tAs a candidate\r\n\tI want to be write some U" +
        "I/Acceptance test", SourceFile="Features\\QuickSearch.feature", SourceLine=0)]
    public partial class QuickSearchOnHomePageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "QuickSearch.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "QuickSearch on home page", "\tIn order to complete the assignment\r\n\tAs a candidate\r\n\tI want to be write some U" +
                    "I/Acceptance test", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void AsAnUserICanMakeAQuickSearchForEachCategory(string category, string search_Result, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "UI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As an user I can make a quick search for each category", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on the home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And(string.Format("\'{0}\' is selected", category), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.When("I do a search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("result page is shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
 testRunner.And(string.Format("I can see \'{0}\'", search_Result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("As an user I can make a quick search for each category, Koop", new string[] {
                "UI"}, SourceLine=14)]
        public virtual void AsAnUserICanMakeAQuickSearchForEachCategory_Koop()
        {
#line 7
this.AsAnUserICanMakeAQuickSearchForEachCategory("Koop", "koopwoningen", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("As an user I can make a quick search for each category, Huur", new string[] {
                "UI"}, SourceLine=14)]
        public virtual void AsAnUserICanMakeAQuickSearchForEachCategory_Huur()
        {
#line 7
this.AsAnUserICanMakeAQuickSearchForEachCategory("Huur", "huurwoningen", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("As an user I can make a quick search for each category, Nieuwbouw", new string[] {
                "UI"}, SourceLine=14)]
        public virtual void AsAnUserICanMakeAQuickSearchForEachCategory_Nieuwbouw()
        {
#line 7
this.AsAnUserICanMakeAQuickSearchForEachCategory("Nieuwbouw", "nieuwbouwprojecten", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("As an user I can make a quick search for each category, recreatie", new string[] {
                "UI"}, SourceLine=14)]
        public virtual void AsAnUserICanMakeAQuickSearchForEachCategory_Recreatie()
        {
#line 7
this.AsAnUserICanMakeAQuickSearchForEachCategory("recreatie", "recreatiewoningen", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("As an user I can make a quick search for each category, europe", new string[] {
                "UI"}, SourceLine=14)]
        public virtual void AsAnUserICanMakeAQuickSearchForEachCategory_Europe()
        {
#line 7
this.AsAnUserICanMakeAQuickSearchForEachCategory("europe", "europese", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("QuickSearch on home page")]
    public partial class QuickSearchOnHomePageFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "QuickSearch.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "QuickSearch on home page", "\tIn order to complete the assignment\r\n\tAs a candidate\r\n\tI want to be write some U" +
                    "I/Acceptance test", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("As an user I can make a quick search for each category")]
        [NUnit.Framework.CategoryAttribute("UI")]
        [NUnit.Framework.TestCaseAttribute("Koop", "koopwoningen", null)]
        [NUnit.Framework.TestCaseAttribute("Huur", "huurwoningen", null)]
        [NUnit.Framework.TestCaseAttribute("Nieuwbouw", "nieuwbouwprojecten", null)]
        [NUnit.Framework.TestCaseAttribute("recreatie", "recreatiewoningen", null)]
        [NUnit.Framework.TestCaseAttribute("europe", "europese", null)]
        public virtual void AsAnUserICanMakeAQuickSearchForEachCategory(string category, string search_Result, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "UI"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As an user I can make a quick search for each category", @__tags);
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I am on the home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And(string.Format("\'{0}\' is selected", category), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.When("I do a search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("result page is shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
 testRunner.And(string.Format("I can see \'{0}\'", search_Result), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
